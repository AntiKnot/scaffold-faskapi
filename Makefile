.PHONY: init check lint tests tests-report coverage clean clean-pyc clean-tests

PYTHON=$(shell command -v python3)

ifeq (, $(PYTHON))
    $(error "PYTHON=$(PYTHON) not found in $(PATH)")
endif

PYTHON_VERSION_REQ=3.8
PYTHON_VERSION_CUR=$(shell $(PYTHON) -c 'import sys; print("%d.%d"% sys.version_info[0:2])')
PYTHON_VERSION_OK=$(shell $(PYTHON) -c 'import sys; cur_ver = sys.version_info[0:2]; req_ver = tuple(map(int, "$(PYTHON_VERSION_REQ)".split("."))); print(int(cur_ver == req_ver))')
ifeq ($(PYTHON_VERSION_OK), 0)
    $(error "Need python version == $(PYTHON_VERSION_MIN). Current version is $(PYTHON_VERSION_CUR)")
endif


define BROWSER_PYSCRIPT
import os, webbrowser, sys
try:
	from urllib import pathname2url
except:
	from urllib.request import pathname2url

webbrowser.open("file://" + pathname2url(os.path.abspath(sys.argv[1])))
endef
export BROWSER_PYSCRIPT
BROWSER := python -c "$$BROWSER_PYSCRIPT"

project_name:="${shell basename `pwd`}"

help:
	@echo "init         - initialize development environment"
	@echo "check        - pre-commit manual execute"
	@echo "clean        - remove all build, test, coverage and Python artifacts"
	@echo "tests        - run tests with the pytest"
	@echo "tests-report - show test report generated by pytest last time, in web browser"
	@echo "coverage     - check code coverage quickly with the default Python"
	@echo "db           - Then you can apply tee migration on the database"

# init developmenteveronment
init:
	pip install fastapi
	pip install "uvicorn[standard]"
	pre-commit install
	pre-commit autoupdate
	mkdir -p tests

check:
	pre-commit run --all-files

# tests
tests:
	pytest --cov=service_data_analyzer tests/test_fake.py
	#pytest tests -s -vv --html=.pytest_cache/index.html

tests-report:
	$(BROWSER) .pytest_cache/index.html

coverage:
	pytest tests -s -vv --cov=r2 --cov-report html
	$(BROWSER) htmlcov/index.html

# clean up
clean: clean-pyc clean-tests

clean-pyc:
	find . -name '*.pyc' -exec rm -f {} +
	find . -name '*.pyo' -exec rm -f {} +
	find . -name '*~' -exec rm -f {} +
	find . -name '__pycache__' -exec rm -fr {} +

clean-tests:
	rm -fr .pytest_cache/
	rm -f .coverage
	rm -fr htmlcov/
